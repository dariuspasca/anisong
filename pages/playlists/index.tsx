import Head from "next/head"
import Link from "next/link"
import { Playlist } from "@/types"
import { Authenticated, useTable } from "@refinedev/core"

import { cn } from "@/lib/utils"
import { buttonVariants } from "@/components/ui/button"
import { DataTable } from "@/components/data-table"
import Layout from "@/components/layout"
import LoadingScreen from "@/components/loading"
import PagedHeader from "@/components/page-header"
import PagedShell from "@/components/page-shell"

import type { NextPageWithLayout } from "../_app"
import { playlistsColumns } from "./columns"

const PlaylistsPage: NextPageWithLayout = () => {
  const {
    tableQueryResult: { data, isLoading },
  } = useTable<Playlist>()

  const tableData = data?.data

  return (
    <Authenticated loading={<LoadingScreen />}>
      <Head>
        <title>Playlists | Anisong</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>

      <PagedShell>
        <PagedHeader heading="Your playlists">
          <Link
            href="/playlists/new"
            className={cn(buttonVariants({ variant: "default" }))}
          >
            New Playlist
          </Link>
        </PagedHeader>

        <div className="flex">
          {isLoading ? (
            <div>Loading...</div>
          ) : (
            <DataTable columns={playlistsColumns} data={tableData ?? []} />
          )}
        </div>
      </PagedShell>
    </Authenticated>
  )
}

PlaylistsPage.getLayout = function getLayout(page) {
  return <Layout>{page}</Layout>
}

export default PlaylistsPage
